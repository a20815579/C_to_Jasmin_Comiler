Terminals unused in grammar

    COMMA
    RETURN
    BREAK
    CONTINUE
    VOID


Rules useless in parser due to conflicts

   49 $@2: %empty


State 31 conflicts: 1 shift/reduce
State 32 conflicts: 6 shift/reduce
State 33 conflicts: 2 shift/reduce
State 34 conflicts: 3 shift/reduce
State 36 conflicts: 1 reduce/reduce
State 99 conflicts: 1 shift/reduce
State 101 conflicts: 6 shift/reduce
State 102 conflicts: 2 shift/reduce
State 103 conflicts: 3 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | Statement

    4 Statement: DeclareStmt
    5          | AssignStmt
    6          | IncDecStmt
    7          | Block
    8          | IfStmt
    9          | WhileStmt
   10          | ForStmt
   11          | PrintStmt
   12          | Expr SEMICOLON

   13 DeclareStmt: Type ID SEMICOLON
   14            | Type ID ASSIGN Expr SEMICOLON
   15            | Type ID LBRACK Expr RBRACK SEMICOLON

   16 AssignStmt: AssignExpr SEMICOLON

   17 IncDecStmt: IncDecExpr SEMICOLON

   18 $@1: %empty

   19 Block: LBRACE $@1 StatementList RBRACE

   20 ElseStmt: ELSE IfStmt
   21         | ELSE Block
   22         | %empty

   23 Condition: Expr

   24 IfStmt: IF LPAREN Condition RPAREN Block ElseStmt

   25 WhileStmt: WHILE LPAREN Condition RPAREN Block

   26 ForStmt: FOR LPAREN ForClause RPAREN Block

   27 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   28 InitStmt: SimpleExpr

   29 PostStmt: SimpleExpr

   30 SimpleExpr: AssignExpr
   31           | Expr
   32           | IncDecExpr

   33 PrintStmt: PRINT LPAREN Expr RPAREN SEMICOLON

   34 Expr: AndExpr
   35     | Expr OR AndExpr

   36 AndExpr: CompExpr
   37        | AndExpr AND CompExpr

   38 CompExpr: AddExpr
   39         | CompExpr CmpOp AddExpr

   40 AddExpr: MulExpr
   41        | AddExpr AddOp MulExpr

   42 MulExpr: UnaryExpr
   43        | MulExpr MulOp UnaryExpr

   44 UnaryExpr: PrimaryExpr
   45          | UnaryOp UnaryExpr

   46 PrimaryExpr: Operand
   47            | IndexExpr
   48            | ConvertExpr

   49 $@2: %empty

   50 IndexExpr: PrimaryExpr $@2 LBRACK Expr RBRACK

   51 ConvertExpr: LPAREN Type RPAREN Expr

   52 IncDecExpr: Expr IncDecOp

   53 AssignExpr: Expr AssignOp Expr

   54 Operand: Literal
   55        | ID
   56        | LPAREN Expr RPAREN

   57 Literal: INT_LIT
   58        | FLOAT_LIT
   59        | STRING_LIT
   60        | BOOL_LIT

   61 Type: INT
   62     | FLOAT
   63     | STRING
   64     | BOOL

   65 CmpOp: GTR
   66      | LSS
   67      | GEQ
   68      | LEQ
   69      | EQL
   70      | NEQ

   71 AddOp: ADD
   72      | SUB

   73 MulOp: MUL
   74      | QUO
   75      | REM

   76 UnaryOp: POS
   77        | NEG
   78        | NOT

   79 AssignOp: ASSIGN
   80         | ADD_ASSIGN
   81         | SUB_ASSIGN
   82         | MUL_ASSIGN
   83         | QUO_ASSIGN
   84         | REM_ASSIGN

   85 IncDecOp: INC
   86         | DEC


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    LPAREN (258) 24 25 26 33 51 56
    RPAREN (259) 24 25 26 33 51 56
    LBRACK (260) 15 50
    RBRACK (261) 15 50
    LBRACE (262) 19
    RBRACE (263) 19
    SEMICOLON (264) 12 13 14 15 16 17 27 33
    COMMA (265)
    PRINT (266) 33
    IF (267) 24
    ELSE (268) 20 21
    FOR (269) 26
    WHILE (270) 25
    RETURN (271)
    BREAK (272)
    CONTINUE (273)
    INT (274) 61
    FLOAT (275) 62
    BOOL (276) 64
    STRING (277) 63
    VOID (278)
    INT_LIT <val> (279) 57
    FLOAT_LIT <val> (280) 58
    STRING_LIT <val> (281) 59
    BOOL_LIT <val> (282) 60
    ID <val> (283) 13 14 15 55
    ADD <val> (284) 71
    SUB <val> (285) 72
    MUL <val> (286) 73
    QUO <val> (287) 74
    REM <val> (288) 75
    INC <val> (289) 85
    DEC <val> (290) 86
    OR <val> (291) 35
    AND <val> (292) 37
    NOT <val> (293) 78
    POS <val> (294) 76
    NEG <val> (295) 77
    GTR <val> (296) 65
    LSS <val> (297) 66
    GEQ <val> (298) 67
    LEQ <val> (299) 68
    EQL <val> (300) 69
    NEQ <val> (301) 70
    ASSIGN <val> (302) 14 79
    ADD_ASSIGN <val> (303) 80
    SUB_ASSIGN <val> (304) 81
    MUL_ASSIGN <val> (305) 82
    QUO_ASSIGN <val> (306) 83
    REM_ASSIGN <val> (307) 84


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    Program (54)
        on left: 1
        on right: 0
    StatementList (55)
        on left: 2 3
        on right: 1 2 19
    Statement (56)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 2 3
    DeclareStmt (57)
        on left: 13 14 15
        on right: 4
    AssignStmt (58)
        on left: 16
        on right: 5
    IncDecStmt (59)
        on left: 17
        on right: 6
    Block (60)
        on left: 19
        on right: 7 21 24 25 26
    $@1 (61)
        on left: 18
        on right: 19
    ElseStmt (62)
        on left: 20 21 22
        on right: 24
    Condition <val> (63)
        on left: 23
        on right: 24 25 27
    IfStmt (64)
        on left: 24
        on right: 8 20
    WhileStmt (65)
        on left: 25
        on right: 9
    ForStmt (66)
        on left: 26
        on right: 10
    ForClause (67)
        on left: 27
        on right: 26
    InitStmt (68)
        on left: 28
        on right: 27
    PostStmt (69)
        on left: 29
        on right: 27
    SimpleExpr (70)
        on left: 30 31 32
        on right: 28 29
    PrintStmt (71)
        on left: 33
        on right: 11
    Expr <val> (72)
        on left: 34 35
        on right: 12 14 15 23 31 33 35 50 51 52 53 56
    AndExpr <val> (73)
        on left: 36 37
        on right: 34 35 37
    CompExpr <val> (74)
        on left: 38 39
        on right: 36 37 39
    AddExpr <val> (75)
        on left: 40 41
        on right: 38 39 41
    MulExpr <val> (76)
        on left: 42 43
        on right: 40 41 43
    UnaryExpr <val> (77)
        on left: 44 45
        on right: 42 43 45
    PrimaryExpr <val> (78)
        on left: 46 47 48
        on right: 44 50
    IndexExpr <val> (79)
        on left: 50
        on right: 47
    $@2 (80)
        on left: 49
        on right: 50
    ConvertExpr <val> (81)
        on left: 51
        on right: 48
    IncDecExpr <val> (82)
        on left: 52
        on right: 17 32
    AssignExpr <val> (83)
        on left: 53
        on right: 16 30
    Operand <val> (84)
        on left: 54 55 56
        on right: 46
    Literal <val> (85)
        on left: 57 58 59 60
        on right: 54
    Type <val> (86)
        on left: 61 62 63 64
        on right: 13 14 15 51
    CmpOp <val> (87)
        on left: 65 66 67 68 69 70
        on right: 39
    AddOp <val> (88)
        on left: 71 72
        on right: 41
    MulOp <val> (89)
        on left: 73 74 75
        on right: 43
    UnaryOp <val> (90)
        on left: 76 77 78
        on right: 45
    AssignOp <val> (91)
        on left: 79 80 81 82 83 84
        on right: 53
    IncDecOp <val> (92)
        on left: 85 86
        on right: 52


State 0

    0 $accept: . Program $end

    LPAREN      shift, and go to state 1
    LBRACE      shift, and go to state 2
    PRINT       shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 10
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Program        go to state 19
    StatementList  go to state 20
    Statement      go to state 21
    DeclareStmt    go to state 22
    AssignStmt     go to state 23
    IncDecStmt     go to state 24
    Block          go to state 25
    IfStmt         go to state 26
    WhileStmt      go to state 27
    ForStmt        go to state 28
    PrintStmt      go to state 29
    Expr           go to state 30
    AndExpr        go to state 31
    CompExpr       go to state 32
    AddExpr        go to state 33
    MulExpr        go to state 34
    UnaryExpr      go to state 35
    PrimaryExpr    go to state 36
    IndexExpr      go to state 37
    ConvertExpr    go to state 38
    IncDecExpr     go to state 39
    AssignExpr     go to state 40
    Operand        go to state 41
    Literal        go to state 42
    Type           go to state 43
    UnaryOp        go to state 44


State 1

   51 ConvertExpr: LPAREN . Type RPAREN Expr
   56 Operand: LPAREN . Expr RPAREN

    LPAREN      shift, and go to state 1
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 10
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Expr         go to state 45
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    Type         go to state 46
    UnaryOp      go to state 44


State 2

   19 Block: LBRACE . $@1 StatementList RBRACE

    $default  reduce using rule 18 ($@1)

    $@1  go to state 47


State 3

   33 PrintStmt: PRINT . LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 48


State 4

   24 IfStmt: IF . LPAREN Condition RPAREN Block ElseStmt

    LPAREN  shift, and go to state 49


State 5

   26 ForStmt: FOR . LPAREN ForClause RPAREN Block

    LPAREN  shift, and go to state 50


State 6

   25 WhileStmt: WHILE . LPAREN Condition RPAREN Block

    LPAREN  shift, and go to state 51


State 7

   61 Type: INT .

    $default  reduce using rule 61 (Type)


State 8

   62 Type: FLOAT .

    $default  reduce using rule 62 (Type)


State 9

   64 Type: BOOL .

    $default  reduce using rule 64 (Type)


State 10

   63 Type: STRING .

    $default  reduce using rule 63 (Type)


State 11

   57 Literal: INT_LIT .

    $default  reduce using rule 57 (Literal)


State 12

   58 Literal: FLOAT_LIT .

    $default  reduce using rule 58 (Literal)


State 13

   59 Literal: STRING_LIT .

    $default  reduce using rule 59 (Literal)


State 14

   60 Literal: BOOL_LIT .

    $default  reduce using rule 60 (Literal)


State 15

   55 Operand: ID .

    $default  reduce using rule 55 (Operand)


State 16

   78 UnaryOp: NOT .

    $default  reduce using rule 78 (UnaryOp)


State 17

   76 UnaryOp: POS .

    $default  reduce using rule 76 (UnaryOp)


State 18

   77 UnaryOp: NEG .

    $default  reduce using rule 77 (UnaryOp)


State 19

    0 $accept: Program . $end

    $end  shift, and go to state 52


State 20

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    LPAREN      shift, and go to state 1
    LBRACE      shift, and go to state 2
    PRINT       shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 10
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    $default  reduce using rule 1 (Program)

    Statement    go to state 53
    DeclareStmt  go to state 22
    AssignStmt   go to state 23
    IncDecStmt   go to state 24
    Block        go to state 25
    IfStmt       go to state 26
    WhileStmt    go to state 27
    ForStmt      go to state 28
    PrintStmt    go to state 29
    Expr         go to state 30
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    IncDecExpr   go to state 39
    AssignExpr   go to state 40
    Operand      go to state 41
    Literal      go to state 42
    Type         go to state 43
    UnaryOp      go to state 44


State 21

    3 StatementList: Statement .

    $default  reduce using rule 3 (StatementList)


State 22

    4 Statement: DeclareStmt .

    $default  reduce using rule 4 (Statement)


State 23

    5 Statement: AssignStmt .

    $default  reduce using rule 5 (Statement)


State 24

    6 Statement: IncDecStmt .

    $default  reduce using rule 6 (Statement)


State 25

    7 Statement: Block .

    $default  reduce using rule 7 (Statement)


State 26

    8 Statement: IfStmt .

    $default  reduce using rule 8 (Statement)


State 27

    9 Statement: WhileStmt .

    $default  reduce using rule 9 (Statement)


State 28

   10 Statement: ForStmt .

    $default  reduce using rule 10 (Statement)


State 29

   11 Statement: PrintStmt .

    $default  reduce using rule 11 (Statement)


State 30

   12 Statement: Expr . SEMICOLON
   35 Expr: Expr . OR AndExpr
   52 IncDecExpr: Expr . IncDecOp
   53 AssignExpr: Expr . AssignOp Expr

    SEMICOLON   shift, and go to state 54
    INC         shift, and go to state 55
    DEC         shift, and go to state 56
    OR          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    ADD_ASSIGN  shift, and go to state 59
    SUB_ASSIGN  shift, and go to state 60
    MUL_ASSIGN  shift, and go to state 61
    QUO_ASSIGN  shift, and go to state 62
    REM_ASSIGN  shift, and go to state 63

    AssignOp  go to state 64
    IncDecOp  go to state 65


State 31

   34 Expr: AndExpr .
   37 AndExpr: AndExpr . AND CompExpr

    AND  shift, and go to state 66

    AND       [reduce using rule 34 (Expr)]
    $default  reduce using rule 34 (Expr)


State 32

   36 AndExpr: CompExpr .
   39 CompExpr: CompExpr . CmpOp AddExpr

    GTR  shift, and go to state 67
    LSS  shift, and go to state 68
    GEQ  shift, and go to state 69
    LEQ  shift, and go to state 70
    EQL  shift, and go to state 71
    NEQ  shift, and go to state 72

    GTR       [reduce using rule 36 (AndExpr)]
    LSS       [reduce using rule 36 (AndExpr)]
    GEQ       [reduce using rule 36 (AndExpr)]
    LEQ       [reduce using rule 36 (AndExpr)]
    EQL       [reduce using rule 36 (AndExpr)]
    NEQ       [reduce using rule 36 (AndExpr)]
    $default  reduce using rule 36 (AndExpr)

    CmpOp  go to state 73


State 33

   38 CompExpr: AddExpr .
   41 AddExpr: AddExpr . AddOp MulExpr

    ADD  shift, and go to state 74
    SUB  shift, and go to state 75

    ADD       [reduce using rule 38 (CompExpr)]
    SUB       [reduce using rule 38 (CompExpr)]
    $default  reduce using rule 38 (CompExpr)

    AddOp  go to state 76


State 34

   40 AddExpr: MulExpr .
   43 MulExpr: MulExpr . MulOp UnaryExpr

    MUL  shift, and go to state 77
    QUO  shift, and go to state 78
    REM  shift, and go to state 79

    MUL       [reduce using rule 40 (AddExpr)]
    QUO       [reduce using rule 40 (AddExpr)]
    REM       [reduce using rule 40 (AddExpr)]
    $default  reduce using rule 40 (AddExpr)

    MulOp  go to state 80


State 35

   42 MulExpr: UnaryExpr .

    $default  reduce using rule 42 (MulExpr)


State 36

   44 UnaryExpr: PrimaryExpr .
   50 IndexExpr: PrimaryExpr . $@2 LBRACK Expr RBRACK

    LBRACK    reduce using rule 44 (UnaryExpr)
    LBRACK    [reduce using rule 49 ($@2)]
    $default  reduce using rule 44 (UnaryExpr)

    $@2  go to state 81


State 37

   47 PrimaryExpr: IndexExpr .

    $default  reduce using rule 47 (PrimaryExpr)


State 38

   48 PrimaryExpr: ConvertExpr .

    $default  reduce using rule 48 (PrimaryExpr)


State 39

   17 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 40

   16 AssignStmt: AssignExpr . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 41

   46 PrimaryExpr: Operand .

    $default  reduce using rule 46 (PrimaryExpr)


State 42

   54 Operand: Literal .

    $default  reduce using rule 54 (Operand)


State 43

   13 DeclareStmt: Type . ID SEMICOLON
   14            | Type . ID ASSIGN Expr SEMICOLON
   15            | Type . ID LBRACK Expr RBRACK SEMICOLON

    ID  shift, and go to state 84


State 44

   45 UnaryExpr: UnaryOp . UnaryExpr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    UnaryExpr    go to state 85
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 45

   35 Expr: Expr . OR AndExpr
   56 Operand: LPAREN Expr . RPAREN

    RPAREN  shift, and go to state 86
    OR      shift, and go to state 57


State 46

   51 ConvertExpr: LPAREN Type . RPAREN Expr

    RPAREN  shift, and go to state 87


State 47

   19 Block: LBRACE $@1 . StatementList RBRACE

    LPAREN      shift, and go to state 1
    LBRACE      shift, and go to state 2
    PRINT       shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 10
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    StatementList  go to state 88
    Statement      go to state 21
    DeclareStmt    go to state 22
    AssignStmt     go to state 23
    IncDecStmt     go to state 24
    Block          go to state 25
    IfStmt         go to state 26
    WhileStmt      go to state 27
    ForStmt        go to state 28
    PrintStmt      go to state 29
    Expr           go to state 30
    AndExpr        go to state 31
    CompExpr       go to state 32
    AddExpr        go to state 33
    MulExpr        go to state 34
    UnaryExpr      go to state 35
    PrimaryExpr    go to state 36
    IndexExpr      go to state 37
    ConvertExpr    go to state 38
    IncDecExpr     go to state 39
    AssignExpr     go to state 40
    Operand        go to state 41
    Literal        go to state 42
    Type           go to state 43
    UnaryOp        go to state 44


State 48

   33 PrintStmt: PRINT LPAREN . Expr RPAREN SEMICOLON

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Expr         go to state 89
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 49

   24 IfStmt: IF LPAREN . Condition RPAREN Block ElseStmt

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Condition    go to state 90
    Expr         go to state 91
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 50

   26 ForStmt: FOR LPAREN . ForClause RPAREN Block

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    ForClause    go to state 92
    InitStmt     go to state 93
    SimpleExpr   go to state 94
    Expr         go to state 95
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    IncDecExpr   go to state 96
    AssignExpr   go to state 97
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 51

   25 WhileStmt: WHILE LPAREN . Condition RPAREN Block

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Condition    go to state 98
    Expr         go to state 91
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 52

    0 $accept: Program $end .

    $default  accept


State 53

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


State 54

   12 Statement: Expr SEMICOLON .

    $default  reduce using rule 12 (Statement)


State 55

   85 IncDecOp: INC .

    $default  reduce using rule 85 (IncDecOp)


State 56

   86 IncDecOp: DEC .

    $default  reduce using rule 86 (IncDecOp)


State 57

   35 Expr: Expr OR . AndExpr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    AndExpr      go to state 99
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 58

   79 AssignOp: ASSIGN .

    $default  reduce using rule 79 (AssignOp)


State 59

   80 AssignOp: ADD_ASSIGN .

    $default  reduce using rule 80 (AssignOp)


State 60

   81 AssignOp: SUB_ASSIGN .

    $default  reduce using rule 81 (AssignOp)


State 61

   82 AssignOp: MUL_ASSIGN .

    $default  reduce using rule 82 (AssignOp)


State 62

   83 AssignOp: QUO_ASSIGN .

    $default  reduce using rule 83 (AssignOp)


State 63

   84 AssignOp: REM_ASSIGN .

    $default  reduce using rule 84 (AssignOp)


State 64

   53 AssignExpr: Expr AssignOp . Expr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Expr         go to state 100
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 65

   52 IncDecExpr: Expr IncDecOp .

    $default  reduce using rule 52 (IncDecExpr)


State 66

   37 AndExpr: AndExpr AND . CompExpr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    CompExpr     go to state 101
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 67

   65 CmpOp: GTR .

    $default  reduce using rule 65 (CmpOp)


State 68

   66 CmpOp: LSS .

    $default  reduce using rule 66 (CmpOp)


State 69

   67 CmpOp: GEQ .

    $default  reduce using rule 67 (CmpOp)


State 70

   68 CmpOp: LEQ .

    $default  reduce using rule 68 (CmpOp)


State 71

   69 CmpOp: EQL .

    $default  reduce using rule 69 (CmpOp)


State 72

   70 CmpOp: NEQ .

    $default  reduce using rule 70 (CmpOp)


State 73

   39 CompExpr: CompExpr CmpOp . AddExpr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    AddExpr      go to state 102
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 74

   71 AddOp: ADD .

    $default  reduce using rule 71 (AddOp)


State 75

   72 AddOp: SUB .

    $default  reduce using rule 72 (AddOp)


State 76

   41 AddExpr: AddExpr AddOp . MulExpr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    MulExpr      go to state 103
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 77

   73 MulOp: MUL .

    $default  reduce using rule 73 (MulOp)


State 78

   74 MulOp: QUO .

    $default  reduce using rule 74 (MulOp)


State 79

   75 MulOp: REM .

    $default  reduce using rule 75 (MulOp)


State 80

   43 MulExpr: MulExpr MulOp . UnaryExpr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    UnaryExpr    go to state 104
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 81

   50 IndexExpr: PrimaryExpr $@2 . LBRACK Expr RBRACK

    LBRACK  shift, and go to state 105


State 82

   17 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 17 (IncDecStmt)


State 83

   16 AssignStmt: AssignExpr SEMICOLON .

    $default  reduce using rule 16 (AssignStmt)


State 84

   13 DeclareStmt: Type ID . SEMICOLON
   14            | Type ID . ASSIGN Expr SEMICOLON
   15            | Type ID . LBRACK Expr RBRACK SEMICOLON

    LBRACK     shift, and go to state 106
    SEMICOLON  shift, and go to state 107
    ASSIGN     shift, and go to state 108


State 85

   45 UnaryExpr: UnaryOp UnaryExpr .

    $default  reduce using rule 45 (UnaryExpr)


State 86

   56 Operand: LPAREN Expr RPAREN .

    $default  reduce using rule 56 (Operand)


State 87

   51 ConvertExpr: LPAREN Type RPAREN . Expr

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Expr         go to state 109
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 88

    2 StatementList: StatementList . Statement
   19 Block: LBRACE $@1 StatementList . RBRACE

    LPAREN      shift, and go to state 1
    LBRACE      shift, and go to state 2
    RBRACE      shift, and go to state 110
    PRINT       shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    INT         shift, and go to state 7
    FLOAT       shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 10
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Statement    go to state 53
    DeclareStmt  go to state 22
    AssignStmt   go to state 23
    IncDecStmt   go to state 24
    Block        go to state 25
    IfStmt       go to state 26
    WhileStmt    go to state 27
    ForStmt      go to state 28
    PrintStmt    go to state 29
    Expr         go to state 30
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    IncDecExpr   go to state 39
    AssignExpr   go to state 40
    Operand      go to state 41
    Literal      go to state 42
    Type         go to state 43
    UnaryOp      go to state 44


State 89

   33 PrintStmt: PRINT LPAREN Expr . RPAREN SEMICOLON
   35 Expr: Expr . OR AndExpr

    RPAREN  shift, and go to state 111
    OR      shift, and go to state 57


State 90

   24 IfStmt: IF LPAREN Condition . RPAREN Block ElseStmt

    RPAREN  shift, and go to state 112


State 91

   23 Condition: Expr .
   35 Expr: Expr . OR AndExpr

    OR  shift, and go to state 57

    $default  reduce using rule 23 (Condition)


State 92

   26 ForStmt: FOR LPAREN ForClause . RPAREN Block

    RPAREN  shift, and go to state 113


State 93

   27 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 114


State 94

   28 InitStmt: SimpleExpr .

    $default  reduce using rule 28 (InitStmt)


State 95

   31 SimpleExpr: Expr .
   35 Expr: Expr . OR AndExpr
   52 IncDecExpr: Expr . IncDecOp
   53 AssignExpr: Expr . AssignOp Expr

    INC         shift, and go to state 55
    DEC         shift, and go to state 56
    OR          shift, and go to state 57
    ASSIGN      shift, and go to state 58
    ADD_ASSIGN  shift, and go to state 59
    SUB_ASSIGN  shift, and go to state 60
    MUL_ASSIGN  shift, and go to state 61
    QUO_ASSIGN  shift, and go to state 62
    REM_ASSIGN  shift, and go to state 63

    $default  reduce using rule 31 (SimpleExpr)

    AssignOp  go to state 64
    IncDecOp  go to state 65


State 96

   32 SimpleExpr: IncDecExpr .

    $default  reduce using rule 32 (SimpleExpr)


State 97

   30 SimpleExpr: AssignExpr .

    $default  reduce using rule 30 (SimpleExpr)


State 98

   25 WhileStmt: WHILE LPAREN Condition . RPAREN Block

    RPAREN  shift, and go to state 115


State 99

   35 Expr: Expr OR AndExpr .
   37 AndExpr: AndExpr . AND CompExpr

    AND  shift, and go to state 66

    AND       [reduce using rule 35 (Expr)]
    $default  reduce using rule 35 (Expr)


State 100

   35 Expr: Expr . OR AndExpr
   53 AssignExpr: Expr AssignOp Expr .

    OR  shift, and go to state 57

    $default  reduce using rule 53 (AssignExpr)


State 101

   37 AndExpr: AndExpr AND CompExpr .
   39 CompExpr: CompExpr . CmpOp AddExpr

    GTR  shift, and go to state 67
    LSS  shift, and go to state 68
    GEQ  shift, and go to state 69
    LEQ  shift, and go to state 70
    EQL  shift, and go to state 71
    NEQ  shift, and go to state 72

    GTR       [reduce using rule 37 (AndExpr)]
    LSS       [reduce using rule 37 (AndExpr)]
    GEQ       [reduce using rule 37 (AndExpr)]
    LEQ       [reduce using rule 37 (AndExpr)]
    EQL       [reduce using rule 37 (AndExpr)]
    NEQ       [reduce using rule 37 (AndExpr)]
    $default  reduce using rule 37 (AndExpr)

    CmpOp  go to state 73


State 102

   39 CompExpr: CompExpr CmpOp AddExpr .
   41 AddExpr: AddExpr . AddOp MulExpr

    ADD  shift, and go to state 74
    SUB  shift, and go to state 75

    ADD       [reduce using rule 39 (CompExpr)]
    SUB       [reduce using rule 39 (CompExpr)]
    $default  reduce using rule 39 (CompExpr)

    AddOp  go to state 76


State 103

   41 AddExpr: AddExpr AddOp MulExpr .
   43 MulExpr: MulExpr . MulOp UnaryExpr

    MUL  shift, and go to state 77
    QUO  shift, and go to state 78
    REM  shift, and go to state 79

    MUL       [reduce using rule 41 (AddExpr)]
    QUO       [reduce using rule 41 (AddExpr)]
    REM       [reduce using rule 41 (AddExpr)]
    $default  reduce using rule 41 (AddExpr)

    MulOp  go to state 80


State 104

   43 MulExpr: MulExpr MulOp UnaryExpr .

    $default  reduce using rule 43 (MulExpr)


State 105

   50 IndexExpr: PrimaryExpr $@2 LBRACK . Expr RBRACK

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Expr         go to state 116
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 106

   15 DeclareStmt: Type ID LBRACK . Expr RBRACK SEMICOLON

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Expr         go to state 117
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 107

   13 DeclareStmt: Type ID SEMICOLON .

    $default  reduce using rule 13 (DeclareStmt)


State 108

   14 DeclareStmt: Type ID ASSIGN . Expr SEMICOLON

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Expr         go to state 118
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 109

   35 Expr: Expr . OR AndExpr
   51 ConvertExpr: LPAREN Type RPAREN Expr .

    OR  shift, and go to state 57

    OR        [reduce using rule 51 (ConvertExpr)]
    $default  reduce using rule 51 (ConvertExpr)


State 110

   19 Block: LBRACE $@1 StatementList RBRACE .

    $default  reduce using rule 19 (Block)


State 111

   33 PrintStmt: PRINT LPAREN Expr RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 112

   24 IfStmt: IF LPAREN Condition RPAREN . Block ElseStmt

    LBRACE  shift, and go to state 2

    Block  go to state 120


State 113

   26 ForStmt: FOR LPAREN ForClause RPAREN . Block

    LBRACE  shift, and go to state 2

    Block  go to state 121


State 114

   27 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    Condition    go to state 122
    Expr         go to state 91
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 115

   25 WhileStmt: WHILE LPAREN Condition RPAREN . Block

    LBRACE  shift, and go to state 2

    Block  go to state 123


State 116

   35 Expr: Expr . OR AndExpr
   50 IndexExpr: PrimaryExpr $@2 LBRACK Expr . RBRACK

    RBRACK  shift, and go to state 124
    OR      shift, and go to state 57


State 117

   15 DeclareStmt: Type ID LBRACK Expr . RBRACK SEMICOLON
   35 Expr: Expr . OR AndExpr

    RBRACK  shift, and go to state 125
    OR      shift, and go to state 57


State 118

   14 DeclareStmt: Type ID ASSIGN Expr . SEMICOLON
   35 Expr: Expr . OR AndExpr

    SEMICOLON  shift, and go to state 126
    OR         shift, and go to state 57


State 119

   33 PrintStmt: PRINT LPAREN Expr RPAREN SEMICOLON .

    $default  reduce using rule 33 (PrintStmt)


State 120

   24 IfStmt: IF LPAREN Condition RPAREN Block . ElseStmt

    ELSE  shift, and go to state 127

    $default  reduce using rule 22 (ElseStmt)

    ElseStmt  go to state 128


State 121

   26 ForStmt: FOR LPAREN ForClause RPAREN Block .

    $default  reduce using rule 26 (ForStmt)


State 122

   27 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 129


State 123

   25 WhileStmt: WHILE LPAREN Condition RPAREN Block .

    $default  reduce using rule 25 (WhileStmt)


State 124

   50 IndexExpr: PrimaryExpr $@2 LBRACK Expr RBRACK .

    $default  reduce using rule 50 (IndexExpr)


State 125

   15 DeclareStmt: Type ID LBRACK Expr RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 130


State 126

   14 DeclareStmt: Type ID ASSIGN Expr SEMICOLON .

    $default  reduce using rule 14 (DeclareStmt)


State 127

   20 ElseStmt: ELSE . IfStmt
   21         | ELSE . Block

    LBRACE  shift, and go to state 2
    IF      shift, and go to state 4

    Block   go to state 131
    IfStmt  go to state 132


State 128

   24 IfStmt: IF LPAREN Condition RPAREN Block ElseStmt .

    $default  reduce using rule 24 (IfStmt)


State 129

   27 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    LPAREN      shift, and go to state 1
    INT_LIT     shift, and go to state 11
    FLOAT_LIT   shift, and go to state 12
    STRING_LIT  shift, and go to state 13
    BOOL_LIT    shift, and go to state 14
    ID          shift, and go to state 15
    NOT         shift, and go to state 16
    POS         shift, and go to state 17
    NEG         shift, and go to state 18

    PostStmt     go to state 133
    SimpleExpr   go to state 134
    Expr         go to state 95
    AndExpr      go to state 31
    CompExpr     go to state 32
    AddExpr      go to state 33
    MulExpr      go to state 34
    UnaryExpr    go to state 35
    PrimaryExpr  go to state 36
    IndexExpr    go to state 37
    ConvertExpr  go to state 38
    IncDecExpr   go to state 96
    AssignExpr   go to state 97
    Operand      go to state 41
    Literal      go to state 42
    UnaryOp      go to state 44


State 130

   15 DeclareStmt: Type ID LBRACK Expr RBRACK SEMICOLON .

    $default  reduce using rule 15 (DeclareStmt)


State 131

   21 ElseStmt: ELSE Block .

    $default  reduce using rule 21 (ElseStmt)


State 132

   20 ElseStmt: ELSE IfStmt .

    $default  reduce using rule 20 (ElseStmt)


State 133

   27 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 27 (ForClause)


State 134

   29 PostStmt: SimpleExpr .

    $default  reduce using rule 29 (PostStmt)
